def androidId = rootProject.ext.androidId
def support = rootProject.ext.dependencies
def appId = rootProject.ext.appId
android {
    compileSdkVersion androidId.compileSdkVersion

    defaultConfig {
        if (!isRelease) {
            applicationId appId.get(project.getName())
        }
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [projectName: project.getName(),
                             packageNameAPT: packageNameAPT,
                             packageName   : eventBusPackagename + project.getName() + ".event",
                             className     : "EventBusIndex"]
            }
        }
        buildConfigField "String", "EVENT_PACKAGEAME", "\"${eventBusPackagename + project.getName() + ".event"}\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            if (!isRelease) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude '**/debug/**'
                    exclude '**/android/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    support.each { k, v -> implementation v }
    implementation project(':ancely_annotation')
    annotationProcessor project(':ancely_compile')
    implementation project(':common')
}
